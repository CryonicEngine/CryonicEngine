[PLATFORMS]
ALL

[PERMUTATIONS]

MONOCHROME
PRE_TRANSFORMED_VERTICES
CAMERA_MODE
VERTEX_SHADER_RENDER_TARGET_ARRAY_INDEX
TOPOLOGY

[RENDERSTATE]

BlendingEnabled0 = false
DestBlend0 = Blend_InvSrcAlpha
SourceBlend0 = Blend_SrcAlpha
DestBlendAlpha0 = Blend_InvSrcAlpha

DepthTest = true
#if PRE_TRANSFORMED_VERTICES
  DepthWrite = false
#else
  DepthWrite = true
#endif

[VERTEXSHADER]

#define USE_COLOR0
#define USE_TEXCOORD0

#include <Shaders/Common/GlobalConstants.h>
#include <Shaders/Materials/MaterialInterpolator.h>

VS_OUT main(VS_IN Input)
{
  VS_OUT RetVal;
  #if defined(CAMERA_MODE) && CAMERA_MODE == CAMERA_MODE_STEREO
    s_ActiveCameraEyeIndex = Input.InstanceID % 2;
    #if VERTEX_SHADER_RENDER_TARGET_ARRAY_INDEX == TRUE
      RetVal.RenderTargetArrayIndex = Input.InstanceID % 2;
    #endif
  #endif

  #if PRE_TRANSFORMED_VERTICES
    float2 screenPosition = (Input.Position.xy * ViewportSize.zw) * float2(2.0, -2.0) + float2(-1.0, 1.0);
    RetVal.Position = float4(screenPosition, Input.Position.z, 1.0f);
  #else
    RetVal.Position = mul(GetWorldToScreenMatrix(), float4(Input.Position, 1.0f));
  #endif

  RetVal.Color0 = Input.Color0;
  RetVal.InstanceID = Input.InstanceID;
  RetVal.TexCoord0 = Input.TexCoord0;

  return RetVal;
}

[GEOMETRYSHADER]

#define USE_COLOR0
#define USE_TEXCOORD0

#include <Shaders/Materials/StereoGeometryShader.h>

[PIXELSHADER]

#define USE_COLOR0
#define USE_TEXCOORD0

#include <Shaders/Materials/MaterialInterpolator.h>

Texture2D BaseTexture BIND_GROUP(BG_RENDER_PASS);
SamplerState BaseTexture_AutoSampler BIND_GROUP(BG_RENDER_PASS);

float4 main(PS_IN Input) : SV_Target
{
#if MONOCHROME
  return float4(BaseTexture.Sample(BaseTexture_AutoSampler, Input.TexCoord0.xy).rrr, 1) * Input.Color0;
#else
  return BaseTexture.Sample(BaseTexture_AutoSampler, Input.TexCoord0.xy) * Input.Color0;
#endif
}
